#!/bin/env python

out = config['--out']
wcard = config['gvcflist']
mergename = ['file']
rg = config['--ref-genome']
if rg:
    ref_genome = rg
else:
    ref_genome = '/data/refseq/tooldata/GATKbundle/2.8/b37/human_g1k_v37.fasta'
gvcf = out + "_indv_files/{wcard}/{wcard}.chr_{{chrom}}.rawGvcf"
gvcf_list = "chrom_{chrom}.gvcf.list"

mergedGvcf = out + "_merged_files/{mergename}.chr_{chrom}.mergedGvcf"
mergedGvcf_idx = mergedGvcf + ".idx"
chr_list = list(range(1,23)) + ['X','Y','MT']

finalvcf = out + "_merged_files/{mergename}.chr_{chrom}.vcf"

rule combineGvcf_all:
    input: expand(finalvcf, chrom = chr_list, mergename = mergename)
    
rule gvcf_create_list:
    input: expand(gvcf,wcard = wcard)
    output: temp(gvcf_list)
    shell:
        "for i in {input}; do ls $i >> {output}; done"

rule gvcf_combine_cwise:
    input: a = expand(gvcf,wcard = wcard), mergelist = gvcf_list, r = ref_genome
    output: a = mergedGvcf, b = mergedGvcf_idx
    shell:
        "gatk -T CombineGVCFs -V {input.mergelist} -R {input.r} -o {output.a}"

rule genotype_gvcf:
    input: a = mergedGvcf, r = ref_genome
    output: finalvcf
    shell:
         "gatk -T GenotypeGVCFs -nt 16 -R {input.r} -L {wildcards.chrom} --variant {input.a} -o {output}"
